<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.db.MyCompanyUserMapper">

	<select id="findAllCompanyUsers" resultType="CompanyUser">
		<![CDATA[
		select 
		uid as uid
		,domain AS domain
		,name AS name
		,compUid AS compUid
		,customId as customId
		,compName as compName
		,email AS email
		,phone AS phone
		,title AS title
		,unit AS	unit
		,remark AS remark
		,status AS status
		,officeHour AS officeHour
		,userLoginId AS userLoginId
		,userLoginPwd AS userLoginPwd
		,createdBy AS createdBy
		,createdTime AS createdTime
		,lastUpdateUser AS lastUpdateUser
		,lastUpdateTime AS lastUpdateTime
		from CompanyUser
		]]>
	</select>

	<select id="findCompanyUserById" parameterType="string"
		resultType="CompanyUser">
		<![CDATA[
		select
		uid as uid
		,domain AS domain
		,name AS name
		,compUid AS compUid
		,customId as customId
		,compName as compName
		,email AS email
		,phone AS phone
		,title AS title
		,unit AS	unit
		,remark AS remark
		,status AS status
		,officeHour AS officeHour
		,userLoginId AS userLoginId
		,userLoginPwd AS userLoginPwd
		,createdBy AS createdBy
		,createdTime AS createdTime
		,lastUpdateUser AS lastUpdateUser
		,lastUpdateTime AS lastUpdateTime
		from CompanyUser
		WHERE uid=#{uid}
		]]>
	</select>

	<select id="findCompanyUserByWhereString" parameterType="com.db.DbWhere"
		resultType="CompanyUser">
		<![CDATA[
		select
		uid as uid
		,domain AS domain
		,name AS name
		,compUid AS compUid
		,customId as customId
		,compName as compName
		,email AS email
		,phone AS phone
		,title AS title
		,unit AS	unit
		,remark AS remark
		,status AS status
		,officeHour AS officeHour
		,userLoginId AS userLoginId
		,userLoginPwd AS userLoginPwd
		,createdBy AS createdBy
		,createdTime AS createdTime
		,lastUpdateUser AS lastUpdateUser
		,lastUpdateTime AS lastUpdateTime
		from CompanyUser
		WHERE ${where}
		]]>
	</select>


	<insert id="insertCompanyUsers" parameterType="CompanyUser">
		<![CDATA[
		INSERT INTO companyUser
		(uID, domain, name, compUid, customId, compName,email,phone, title,unit,	remark, status, officeHour
		,userLoginId, userLoginPwd
		,createdBy,createdTime,lastUpdateUser,lastUpdateTime
		)VALUES(
		#{uid},#{domain},#{name},#{compUid},#{customId},#{compName},#{email},#{phone},#{title},#{unit},#{remark},#{status},#{officeHour}
		,#{userLoginId},#{userLoginPwd}
		,#{createdBy},#{createdTime},#{lastUpdateUser},#{lastUpdateTime}
		)
		]]>
	</insert>


	<update id="updateCompanyUser" parameterType="CompanyUser">
		<![CDATA[
		UPDATE companyUser SET
		domain=#{domain}
		,name=#{name}
		,compUid=#{compUid}
		,customId=#{customId}
		,compName=#{compName}
		,email=#{email}
		,phone=#{phone}
		,title=#{title}	
		,unit=#{unit}
		,remark=#{remark}
		,status=#{status}
		,officeHour=#{officeHour}
		,userLoginId=#{userLoginId}
		,userLoginPwd=#{userLoginPwd}
		,lastUpdateUser=#{lastUpdateUser}
		,lastUpdateTime=#{lastUpdateTime}
		where uid=#{uid}
		]]>
	</update>

	<delete id="deleteCompanyUser" parameterType="string">
		<![CDATA[
		DELETE FROM companyUser where uid =#{uid}
		]]>
	</delete>

</mapper>