<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.db.MyUserAndRoleMapper">

	<select id="findUserCountByLoginId" parameterType="string"
		resultType="string">
		<![CDATA[
		select count(USERID) 
		from USERS 
		where 
		userloginid=#{loginid}
		]]>
	</select>

	<select id="findUserCountByLoginPwd" parameterType="string"
		resultType="string">
		<![CDATA[
		select count(USERID) 
		from USERS 
		where 
		userLoginPwd=#{loginPwd}
		]]>
	</select>

	<select id="findRoleNameFromRoleId" parameterType="string"
		resultType="string">
		<![CDATA[
		select roleName 
		from userauth 
		where roleID=#{roleID}
		]]>
	</select>

	<select id="readUserAuthByID" parameterType="string" resultType="string">
		<![CDATA[
		select authUid
		from authorities 
		where personUid=#{personUid}
		]]>
	</select>

	<select id="findUserByLoginIdAndPwd" parameterType="com.vo.VOLoginInfo"
		resultType="User">
		<![CDATA[
		select
		userID AS uid
		,userName as userName
		,userPhone as userPhone
		,userEmail as userEmail
		,userLoginID as userLoginId
		,userLoginPwd as userLoginPwd
		,userstatus as userStatus
		,userRole as userRole
		,compid AS compid
		,compName AS userComp
		from USERS
		where 
		userloginid=#{userLoginId} 
		and userLoginPwd=#{userLoginPwd} 
		and userStatus='ok'
		]]>
	</select>


	<select id="findUsersByUid" parameterType="string" resultType="User">
		<![CDATA[
		select 
		userID AS uid
		,userName as userName
		,userPhone as userPhone
		,userEmail as userEmail
		,userLoginID as userLoginId
		,userLoginPwd as userLoginPwd
		,userstatus as userStatus
		,userRole as userRole
		,compid AS compid
		,compName AS userComp
		from USERS
		where userID=#{userId}
		]]>
	</select>

	<select id="findUsersByConditions" parameterType="com.vo.VOUserAccountListCondition"
		resultType="User">
		<![CDATA[
		select 
		userID AS uid
		,userName as userName
		,userPhone as userPhone
		,userEmail as userEmail
		,userLoginID as userLoginId
		,userLoginPwd as userLoginPwd
		,userstatus as userStatus
		,userRole as userRole
		,compid AS compid
		,compName AS userComp
		from USERS
		where 1=1
		]]>
		<if test="userName != ''">
			AND userName LIKE #{userName}
			</if>
		<if test="userRole != 'NONE'">
			AND userRole=#{userRole}
			</if>
		<if test="userRole == 'NONE'">
			AND userRole='中心人員'
			</if>
		AND userStatus=#{userStatus}
		order by uid
	</select>

	<insert id="insertUser" parameterType="User">
		<![CDATA[
		INSERT INTO	Users
		(userID, userName, userPhone, userEmail,userLoginId, userLoginPwd
		, userStatus, userRole,compid,compName,linkedObjId
		,createdBy,createdTime,lastUpdateUser,lastUpdateTime)
		VALUES
		(#{uid},#{userName},#{userPhone},#{userEmail},#{userLoginId},#{userLoginPwd}
		,#{userStatus},#{userRole},#{compid},#{userComp},#{linkedObjId}
		,#{createdBy},#{createdTime},#{lastUpdateUser},#{lastUpdateTime})
		]]>
	</insert>

	<update id="updateUser" parameterType="User">
		<![CDATA[
		UPDATE Users SET
		userName=#{userName}
		,compid=#{compid}
		,compName=#{userComp}
		,userPhone=#{userPhone}
		,userEmail=#{userEmail}
		,userLoginId=#{userLoginId}
		,userLoginPwd=#{userLoginPwd}
		,userStatus=#{userStatus}
		,lastUpdateUser=#{lastUpdateUser}
		,lastUpdateTime=#{lastUpdateTime}
		where userID=#{uid}
		]]>
	</update>

	<delete id="deleteUser" parameterType="string">
		<![CDATA[
		DELETE FROM Users where userID =#{uid}
		]]>
	</delete>

</mapper>